AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Doctor Procedures Bedrock App

Parameters:
  BedrockAgentId:
    Type: String
    Description: The ID of the Bedrock Agent
    Default: "DUMMY_AGENT_ID"
  
  BedrockAgentAliasId:
    Type: String
    Description: The Alias ID of the Bedrock Agent
    Default: "TSTALIASID"

Globals:
  Function:
    Timeout: 30
    MemorySize: 256
    Runtime: python3.11
    Environment:
      Variables:
        DYNAMODB_TABLE_NAME: !Ref DoctorProceduresTable
        BEDROCK_AGENT_ID: !Ref BedrockAgentId
        BEDROCK_AGENT_ALIAS_ID: !Ref BedrockAgentAliasId

Resources:
  # DynamoDB Table
  DoctorProceduresTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: DoctorProcedures
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: DoctorName
          AttributeType: S
        - AttributeName: ProcedureTime
          AttributeType: S
      KeySchema:
        - AttributeName: DoctorName
          KeyType: HASH
        - AttributeName: ProcedureTime
          KeyType: RANGE

  # Lambda Functions
  BedrockIntentMapperFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/bedrock_intent_mapper_lambda/
      Handler: bedrock_intent_mapper_lambda.lambda_handler
      Policies:
        - Statement:
          - Effect: Allow
            Action:
              - bedrock:InvokeAgent
            Resource: '*'
          - Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource: 
              - !GetAtt GetQuoteFunction.Arn
              - !GetAtt ShowHistoryFunction.Arn
              - !GetAtt AddDoctorProcedureFunction.Arn
      Events:
        BedrockIntentMapperApi:
          Type: Api
          Properties:
            Path: /intent-mapper
            Method: post
            RestApiId: !Ref DoctorProceduresApi

  AddDoctorProcedureFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/add_doctor_procedure/
      Handler: add_doctor_procedure_lambda.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DoctorProceduresTable
      Events:
        AddDoctorProcedureApi:
          Type: Api
          Properties:
            Path: /add-doctor-procedure
            Method: post
            RestApiId: !Ref DoctorProceduresApi

  GetQuoteFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/get_quote_lambda/
      Handler: get_quote_lambda.lambda_handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref DoctorProceduresTable
      Events:
        GetQuoteApi:
          Type: Api
          Properties:
            Path: /get-quote
            Method: get
            RestApiId: !Ref DoctorProceduresApi

  ShowHistoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/show_history_lambda/
      Handler: show_history_lambda.lambda_handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref DoctorProceduresTable
      Events:
        ShowHistoryApi:
          Type: Api
          Properties:
            Path: /show-history
            Method: get
            RestApiId: !Ref DoctorProceduresApi

  # API Gateway
  DoctorProceduresApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'content-type,x-amz-date,authorization,x-api-key,x-amz-security-token'"
        AllowOrigin: "'*'"

  # Lambda Permissions for Bedrock Agent
  AddDoctorProcedureBedrockPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref AddDoctorProcedureFunction
      Action: lambda:InvokeFunction
      Principal: bedrock.amazonaws.com
      SourceAccount: !Ref AWS::AccountId

  GetQuoteBedrockPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref GetQuoteFunction
      Action: lambda:InvokeFunction
      Principal: bedrock.amazonaws.com
      SourceAccount: !Ref AWS::AccountId

  ShowHistoryBedrockPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ShowHistoryFunction
      Action: lambda:InvokeFunction
      Principal: bedrock.amazonaws.com
      SourceAccount: !Ref AWS::AccountId

Outputs:
  DoctorProceduresApi:
    Description: "API Gateway endpoint URL for dev stage"
    Value: !Sub "https://${DoctorProceduresApi}.execute-api.${AWS::Region}.amazonaws.com/dev/"
  
  BedrockIntentMapperFunction:
    Description: "Bedrock Intent Mapper Lambda Function ARN"
    Value: !GetAtt BedrockIntentMapperFunction.Arn

  AddDoctorProcedureFunction:
    Description: "Add Doctor Procedure Lambda Function ARN"
    Value: !GetAtt AddDoctorProcedureFunction.Arn

  GetQuoteFunction:
    Description: "Get Quote Lambda Function ARN"
    Value: !GetAtt GetQuoteFunction.Arn

  ShowHistoryFunction:
    Description: "Show History Lambda Function ARN"
    Value: !GetAtt ShowHistoryFunction.Arn

  DoctorProceduresTable:
    Description: "DynamoDB table name"
    Value: !Ref DoctorProceduresTable
